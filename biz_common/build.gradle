apply plugin: 'com.android.library'
apply from: '../config/arouter/init.gradle'
apply plugin: rootProject.ext.plugin.butterknife
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    //multiDex
//    api rootProject.ext.dependencies["multidex"]
    api rootProject.ext.dependencies["appcompat"]
    api rootProject.ext.dependencies["constraint-layout"]
    //butterknife
    api rootProject.ext.dependencies["butterknife"]
    api rootProject.ext.dependencies["recycleview"]
    api rootProject.ext.dependencies["rxjava2"]
    api rootProject.ext.dependencies["rxandroid"]
    //permissions
    api rootProject.ext.dependencies["rxpermission"]
    //other
    api rootProject.ext.dependencies['logger']
    api rootProject.ext.dependencies['glide']

    annotationProcessor rootProject.ext.dependencies['room-compiler'] // compiler 需要用 room 的
    api  rootProject.ext.dependencies['wcdb-room']  // 代替 room-runtime，同时也不需要再引用 wcdb-android
    api  rootProject.ext.dependencies['wcdb-android']
    api  rootProject.ext.dependencies['room-runtime']
    api project(':ijkplayer-exo')
    api project(':ijkplayer-java')
}
